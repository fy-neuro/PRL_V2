##Begining 
###packages

```{r}
library(dplyr)
library(Seurat)
library(patchwork)
library(readr)
library(cols4all)
library(ggplot2)
library(openxlsx)
library(tibble)
library(loupeR)
library(SeuratWrappers)
library(CellChat)
```

###jobname

```{r}
jobname<-"PRL_33"
```

###load data

```{r}
sobj<-readRDS("E:/PRL/20250123-24-Annotation-third-MNN/Documents/sobj_3rd_cleaned.rds")
sobj$subcluster<- sobj$subcluster %>% as.character %>% as.factor
sobj$samples <- sobj$orig.ident %>% as.factor
```

```{r}
# 安装所需包
# if (!require("CellChat")) remotes::install_github("sqjin/CellChat")
library(CellChat)
library(Seurat)
library(patchwork)

# 创建函数简化重复操作
create_cellchat <- function(seurat_obj, celltype_column) {
  # 提取表达矩阵和metadata
  data.input <- GetAssayData(seurat_obj, assay = "RNA", slot = "data")
  meta <- seurat_obj@meta.data[, c("orig.ident", "Group", celltype_column,"samples")]
  colnames(meta)[3] <- "celltype"
  
  # 创建CellChat对象
  cellchat <- createCellChat(object = data.input, meta = meta, group.by = "celltype")
  
  # 添加细胞注释
  cellchat <- setIdent(cellchat, ident.use = "celltype")
  CellChatDB <- CellChatDB.human # use CellChatDB.human if running on human data
  CellChatDB.use <- subsetDB(CellChatDB, search = "Secreted Signaling", key = "annotation") # use Secreted Signaling
  # 预处理
  cellchat@DB <- CellChatDB.use  # 根据实际物种选择
  cellchat <- subsetData(cellchat)
  cellchat <- identifyOverExpressedGenes(cellchat)
  cellchat <- identifyOverExpressedInteractions(cellchat)
  
  return(cellchat)
}

Coumpute_Filter <- function(cellchat, min.cells) {
  # 过滤通讯
  cellchat <- computeCommunProb(cellchat)
  cellchat <- filterCommunication(cellchat, min.cells = min.cells)
  cellchat <- computeCommunProbPathway(cellchat)
  cellchat <- aggregateNet(cellchat)
  
  return(cellchat)
}
```

```{r}
# 对于大数据集可启用并行
future::plan("sequential")
# options(future.globals.maxSize = 16 * 1024^3)
ct_level <- "subcluster"
```



```{r}
# 对每个注释层级进行分析


  cat(ct_level,"\n")
  # 创建CellChat对象
  cellchat <- create_cellchat(sobj, ct_level)
  
  # 计算通讯概率
  cellchat <- computeCommunProb(cellchat)
  cellchat <- filterCommunication(cellchat, min.cells = 10)
  cellchat <- computeCommunProbPathway(cellchat)
  cellchat <- aggregateNet(cellchat)
  
  saveRDS(cellchat,paste0("../Documents/Cellchat_Object_",ct_level,".rds"))
  groupSize <- as.numeric(table(cellchat@idents))
```


```{r}
cellchat <- readRDS("../Documents/Cellchat_Object_subcluster.rds")
```


```{r}
##Set Colors
custom_colors <- c(
  # ====== 超大类 A（抑制性神经元：ID2/VIP/SST/NDNF/LAMP5/PVALB，蓝绿-紫-品红渐变）=======
  ## LAMP5（蓝绿色系）
  "LAMP5-FREM2"    = "#5D9BA8",  # 深蓝绿
  "LAMP5-RELN"     = "#80B1D3",  # 中蓝绿
  
  ## NDNF（紫红色系）
  "NDNF-CDH23"     = "#C77DB3",  # 紫红
  "NDNF-RELN"      = "#E6A0CE",  # 浅紫红
  "NDNF-SEMA3C"    = "#F4CBE5",  # 极浅紫红
  
  ## VIP（蓝紫色系）
  "VIP-ABI3BP"     = "#6A5ACD",  # 深蓝紫
  "VIP-ADAMTSL1"   = "#8470FF",  # 中蓝紫
  "VIP-MCTP2"      = "#A899FF",  # 浅蓝紫
  "VIP-SCML4"      = "#C9C1FF",  # 极浅蓝紫
  
  ## SST（品红色系）
  "SST-ADGRG6"     = "#BA55D3",  # 中品红
  "SST-MSR1"       = "#DDA0DD",  # 浅品红
  "SST-PAWR"       = "#EE82EE",  # 粉红
  
  ## PVALB（紫-蓝紫色过渡）
  "PVALB-COL15A1"  = "#9370DB",  # 中紫（连接 VIP 和 SST）
  "PVALB-DPP10"    = "#AB82FF",  # 浅紫
  "PVALB-MEPE"     = "#C1A3FF",  # 极浅紫

  # ====== 超大类 B（免疫细胞：Microglia/BAM/T cells，橙红-深红色系）=======
  "Microglia"      = "#FFA07A",  
  "Microglia2"     = "#FF8C69",  
  "BAMs"           = "#FF6B6B",  
  "T cells"        = "#B22222",  

  # ====== 其他大类 =======
  ## Astro（蓝绿色系，与超大类 A 协调但更偏绿）
  "Astro-PLCG1"    = "#6BABA5",  
  "Astro-SERPINI2" = "#8DD3C7",  
  
  ## 兴奋性神经元（L2/3 & L5/6，橙黄色系）
  "L2/3-CUX2"      = "#FFB14E",  
  "L3-5-RORB"      = "#FFC97F",  
  "L5/6-THEMIS"    = "#FFE0B0",  
  "L5/6-TLE4"      = "#FFF5E1",  
  
  ## 胶质细胞（Oligos & OPCs）
  "Oligos"         = "#BC80BD",  # 紫红
  "OPCs"           = "#A8DDB5",  # 薄荷绿
  "OPCs-MBP"       = "#CCEBC5",  
  
  ## 血管（独立蓝色）
  "Vascular"       = "#377EB8"   
)

# 检查颜色数量
length(custom_colors) == 29  # TRUE
```




```{r}
# 可视化
  pathways.show <- cellchat@netP$pathways
  p1 <- netVisual_heatmap(cellchat)

  p2 <- netVisual_circle(cellchat@net$count, color.use = custom_colors, vertex.weight = rowSums(cellchat@net$count), weight.scale = T, label.edge= F, title.name = "Number of interactions")
  # 保存结果
  pdf(paste0("../plot/CellChat_", ct_level, ".pdf"), width = 12, height = 8)
  print(p1)
  print(p2)
  dev.off()
```

```{r}
# 拆分Control和PD组
control_cells <- Cells(sobj)[sobj$Group == "Control"]
pd_cells <- Cells(sobj)[sobj$Group == "PD"]

# 创建分组对象
cellchat_control <- create_cellchat(sobj[, control_cells], "subcluster")
cellchat_pd <- create_cellchat(sobj[, pd_cells], "subcluster")

# 计算通讯概率（需要分别计算）
cellchat_control <- Coumpute_Filter(cellchat_control)
cellchat_pd <- Coumpute_Filter(cellchat_pd)

# 合并对象进行比较
cellchat_list <- list(Control = cellchat_control, PD = cellchat_pd)
saveRDS(cellchat_list,"../Documents/cellchat_list.rds")
```



```{r}
cellchat_list <- readRDS("../Documents/cellchat_list.rds")
cellchat_control <- cellchat_list$Control
cellchat_pd <- cellchat_list$PD

cellchat_control <- Coumpute_Filter(cellchat_control)
cellchat_pd <- Coumpute_Filter(cellchat_pd)

# 比较总通讯强度
pdf("../plot/Group_comparison.pdf", width = 15, height = 10)
print(compareInteractions(cellchat, measure = "count"))
print(compareInteractions(cellchat, measure = "weight"))
dev.off()
```

```{r}
# 前20通路分析（以PD组为例）
cellchat_pd <- computeNetSimilarity(cellchat_pd)
cellchat_pd <- netAnalysis_computeCentrality(cellchat_pd)

top20_pathways <- rankNet(cellchat_pd, mode = "comparison")$pathways[1:20]
pdf("Top20_Pathways_PD.pdf", width = 12, height = 8)
for (pathway in top20_pathways) {
  print(netVisual_heatmap(cellchat_pd, signaling = pathway))
}
dev.off()

# 前50通路差异比较
pdf("Top50_Differential_Pathways.pdf", width = 18, height = 12)
print(netVisual_heatmap(cellchat, comparison = c(1,2), 
                       signaling = cellchat@netP$pathways[1:50],
                       color.heatmap = "RdBu"))
dev.off()
```

